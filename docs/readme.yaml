openapi: 3.0.3
info:
  title: Swagger Film Recommender - OpenAPI 3.0
  description: |-
    This is the project for the course of  "Services and Design Engineering" 23/24 of the University of Trento. The project is about the development of a microservice that provides a film recommendation system.
    Some useful links:
    - [Film Recommendation repository](https://github.com/marco3724/SDE_Film_Recommendation)
  version: 1.0.11

paths:

  # ------ ADAPTER  ------

  /imdb_film/details:
    get:
      tags:
        - IMDb Detail API
      summary: get the details of a film given the film id
      description: get the details of a film given the film id
      parameters:
        - name: filmID
          in: query
          description: the id of the film
          content:
            application/json:
              schema:
                type: string
          required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '500':
          description: Internal server error
  /imdb_film/autocomplete:
    get:
      tags:
        - IMDb Detail API
      summary: give the film that start with the given term
      description: give the film that start with the given term
      parameters:
        - name: name
          in: query
          description: the initial letter of the film
          content:
            application/json:
              schema:
                type: string
          required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '500':
          description: Internal server error
  /imdb_film/recommend_popular_film:
    get:
      tags:
        - IMDb Detail API
      summary: recommend populare film by genre
      description: recommend populare film by genre
      parameters:
        - name: genre
          in: query
          description: the genre of the recommeded film
          content:
            application/json:
              schema:
                type: string
          required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '500':
          description: Internal server error
  /imdb_film/health:
    get:
      tags:
        - IMDb Detail API
      summary: check the status of the microservice
      description: check the status of the microservice
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid tag value
        '500':
          description: Internal server error
   
  /imdb_film_review/:
    get:
      tags:
        - IMDb Review API
      summary: get the review
      description: get the review of thefilm by its id
      parameters:
        - name: filmID
          in: query
          description: the id of the film
          required: true
          content:
            application/json:
              schema:
                type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid id value
        '500':
          description: Internal server error
  /imdb_film_review/health:
    get:
      tags:
        - IMDb Review API
      summary: check the status of the microservice
      description: check the status of the microservice
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid tag value
        '500':
          description: Internal server error
  /tmdb_film/details:
    get:
      tags:
        - TMDb Detail API
      summary: get the details of a film given the film id
      description: get the details of a film given the film id
      parameters:
        - name: filmID
          in: query
          description: the id of the film
          content:
            application/json:
              schema:
                type: string
          required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '500':
          description: Internal server error
  /tmdb_film/health:
    get:
      tags:
        - TMDb Detail API
      summary: check the status of the microservice
      description: check the status of the microservice
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid tag value
        '500':
          description: Internal server error
  /tmdb_film_review/:
    get:
      tags:
        - TMDb Review API
      summary: get the review
      description: get the review of thefilm by its id
      parameters:
        - name: filmID
          in: query
          description: the id of the film
          required: true
          content:
            application/json:
              schema:
                type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid id value
        '500':
          description: Internal server error
  /tmdb_film_review/health:
    get:
      tags:
        - TMDb Review API
      summary: check the status of the microservice
      description: check the status of the microservice
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid tag value
        '500':
          description: Internal server error   
  /streaming_availability/:
    get:
      tags:
        - Streaming Availability
      summary: Get the vailability of a film from different services
      description: Get the review of thefilm by its id
      parameters:
        - name: filmID
          in: query
          description: the id of the film
          required: true
          content:
            application/json:
              schema:
                type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid id value
        '500':
          description: Internal server error
  /streaming_availability/health:
    get:
      tags:
        - Streaming Availability
      summary: Check the status of the microservice
      description: check the status of the microservice
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid tag value
        '500':
          description: Internal server error 

  /auth_adapter/login:
    post:
      tags:
        - Auth DB Adapter
      summary: Login
      description: Allows the user to log in
      parameters:
        - name: email
          in: query
          description: The user email
          content:
            application/json:
              schema:
                type: string
          required: true
        - name: password
          in: query
          description: The user password
          content:
            application/json:
              schema:
                type: string
          required: true
      responses:
        '200':
          description: Succesfully logged in
        '400':
          description: Wrong email or password
          

  /auth_adapter/register:
    post:
      tags:
        - Auth DB Adapter
      summary: Register
      description: Allows the user to register
      parameters:
        - name: email
          in: query
          description: The user email
          content:
            application/json:
              schema:
                type: string
          required: true
        - name: password
          in: query
          description: The user password
          content:
            application/json:
              schema:
                type: string
          required: true
      responses:
        '200':
          description: good
        '400':
          description: bad
        '500':
          description: Found an account with the same email
          
  /film_adapter/save-film:
    post:
      tags:
        - Movie DB Adapter
      summary: Save films
      description: Save all the recommended films
      parameters:
        - name: email
          in: query
          description: The user email
          content:
            application/json:
              schema:
                type: string
          required: true
        - name: films
          in: query
          description: The list of films to be saved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Film saved succesfully
        '500':
          description: Something went wrong
  
  /film_adapter/retrieve-film:
    get:
      tags:
        - Movie DB Adapter
      summary: Retrieve films
      description: Retrieve all the recommended films for a user
      parameters:
      - name: email
        in: query
        description: The user email
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: user found
        '400':
          description: user not found


  # ------ BUSINESS  ------
  /recommend-film:
    get:
      tags:
        - Recommendation Business
      summary: Retrieve recommended films
      description: Retrieve all the recommended films for a user
      parameters:
      - name: genre
        in: query
        description: The genre for which recommend
        content:
          application/json:
            schema:
              type: string
        required: true
      - name: token
        in: query
        description: The JWT
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Films recommended
        '500':
          description: Something went wrong


  /recommend-film/get-history:
    get:
      tags:
        - Recommendation Business
      summary: Retrieve history of recommended films
      description: Retrieve all the recommended films for a user
      parameters:
      - name: token
        in: query
        description: The JWT
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Retrieved films
        '400':
          description: Invalid token


  /recommend-film/save-history:
    post:
      tags:
        - Recommendation Business
      summary: Save recommended films
      description: Retrieve all the recommended films for a user
      parameters:
      - name: token
        in: query
        description: The JWT
        content:
          application/json:
            schema:
              type: string
        required: true
      - name: films
        in: query
        description: The list of films to be saved
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Saved films
        '400':
          description: Invalid token

  /login_business/login:
    post:
      tags:
        - Login Business
      summary: Performs the login
      description: Verifies whether the user can login or not
      parameters:
        - name: email
          in: query
          description: The user email
          content:
            application/json:
              schema:
                type: string
          required: true
        - name: password
          in: query
          description: The user password
          content:
            application/json:
              schema:
                type: string
          required: true
      responses:
        '200':
          description: Succesfully logged in!
        '400':
          description: Wrong email or password
        '500':
          description: Oops server has a problem :(


  /login_business/login/verify-token:
    post:
      tags:
        - Login Business
      summary: Verifies JWT Token
      description: It allows to verify a JWT token to know if a user is authenticated or not
      parameters:
      - name: token
        in: query
        description: The JWT
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: user authenticated
        '400':
          description: user not authenticated
  /full_details_film/:
    get:
      tags:
        - Detail Business Layer
      summary: Retrieve films details from all sources
      description:  Retrieve films details from all sources
      parameters:
        - name: filmID
          in: query
          description: the id of the film
          required: true
          content:
            application/json:
              schema:
                type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid id value
        '500':
          description: Internal server error
  /full_details_film/health/:
    get:
      tags:
        - Detail Business Layer
      summary: check the status of the microservice
      description: check the status of the microservice
      responses:
        '200':
          description: successful operation
        '500':
          description: Internal server error
  /full_review_film/:
    get:
      tags:
        - Review Business Layer
      summary: Retrieve films review from all sources
      description:  Retrieve films review from all sources
      parameters:
        - name: filmID
          in: query
          description: the id of the film
          required: true
          content:
            application/json:
              schema:
                type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid id value
        '500':
          description: Internal server error
  /full_review_film/health/:
    get:
      tags:
        - Review Business Layer
      summary: check the status of the microservice
      description: check the status of the microservice
      responses:
        '200':
          description: successful operation
        '500':
          description: Internal server error
  /available_streaming_services/:
    get:
      tags:
        - Streaming Availability Business Layer
      summary: Retrieve all available service from all sources
      description: Retrieve all available service from all sources
      parameters:
        - name: filmID
          in: query
          description: the id of the film
          required: true
          content:
            application/json:
              schema:
                type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid id value
        '500':
          description: Internal server error
  /available_streaming_services/health/:
    get:
      tags:
        - Streaming Availability Business Layer
      summary: check the status of the microservice
      description: check the status of the microservice
      responses:
        '200':
          description: successful operation
        '500':
          description: Internal server error

  # ------ PROCESS  ------
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register the user
      description: Coordinates the registration process
      parameters:
        - name: userName
          in: query
          description: The username
          content:
            application/json:
              schema:
                type: string
          required: true
        - name: email
          in: query
          description: The user email
          content:
            application/json:
              schema:
                type: string
          required: true
        - name: password
          in: query
          description: The user password
          content:
            application/json:
              schema:
                type: string
          required: true
      responses:
        '200':
          description: Registration succesfull
        '400':
          description: All fields are required

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login Procedure
      description: Login procedure
      parameters:
        - name: email
          in: query
          description: The user email
          content:
            application/json:
              schema:
                type: string
          required: true
        - name: password
          in: query
          description: The user password
          content:
            application/json:
              schema:
                type: string
          required: true
      responses:
        '200':
          description: Successfull login
        '400':
          description: Unuccessfull login

  /auth/login/isAuthenticated:
    post:
      tags:
        - Authentication
      summary: Verifies whether the user is authenticated or not
      description: Verifies whether the user is authenticated or not
      parameters:
      - name: token
        in: cookie
        description: The JWT
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: user authenticated
        '400':
          description: user not authenticated

  /recommend_film:
    get:
      tags:
        - Recommendation Service
      summary: Retrieve recommended films
      description: Retrieve all the recommended films for a user
      parameters:
      - name: genre
        in: query
        description: The genre for which recommend
        content:
          application/json:
            schema:
              type: string
        required: true
      - name: token
        in: cookie
        description: The JWT
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        '200':
          description: Retrieved films
        '500':
          description: Error in fetching data

  /recommend_film/get-history:
    get:
      tags:
        - Recommendation Service
      summary: Retrieve history of recommended films
      description: Retrieve all the recommended films for a user
      parameters:
      - name: token
        in: query
        description: The JWT
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: Retrieved films
        '400':
          description: You need to login in order to see you history
 
  /full_overview_film/:
    get:
      tags:
        - Film Overview Service
      summary: Retrieve all available detail review and platform availability from all sources
      description: Retrieve all available detail review and platform availability from all sources
      parameters:
        - name: filmID
          in: query
          description: the id of the film
          required: true
          content:
            application/json:
              schema:
                type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid id value
        '500':
          description: Internal server error
  /full_overview_film/health/:
    get:
      tags:
        - Film Overview Service
      summary: check the status of the microservice
      description: check the status of the microservice
      responses:
        '200':
          description: successful operation
        '500':
          description: Internal server error